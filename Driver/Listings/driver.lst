


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             Driver,CODE,READONLY
    2 00000000                 ENTRY
    3 00000000 4A000008 
                       INTMSK  EQU              0x4A000008
    4 00000000 53000000 
                       WTCON   EQU              0x53000000
    5 00000000 4C000000 
                       LOCKTIME
                               EQU              0x4C000000
    6 00000000 4C000014 
                       CLKDIVN EQU              0x4C000014
    7 00000000 40000008 
                       UPLLCON EQU              0x40000008
    8 00000000         ;close interupt
    9 00000000 E59F0164        LDR              R0, = INTMSK ;get the address o
                                                            f INTMSK        
   10 00000004 E3E01000        LDR              R1, =0xFFFFFFFF 
                                                            ;close all interupt
                                                            
   11 00000008 E5801000        STR              R1, [R0]    ;set 0x3FF to 0x4A0
                                                            00008
   12 0000000C         ;close WTD
   13 0000000C E3A00453        LDR              R0, = WTCON ;get the address of
                                                             WTCON
   14 00000010 E3A01000        MOV              R1, #0x0    ;the 5th bit disabl
                                                            e the WTD 
   15 00000014 E5801000        STR              R1, [R0]    ;set 0 to 0x5300000
                                                            0
   16 00000018         ;set timer,LOCKTIME => CLKDIVN  => MPLLCON => UPLLCON
   17 00000018 E3A00313        LDR              R0, = LOCKTIME ;get the address
                                                             of LOCKTIME
   18 0000001C E3E01000        LDR              R1, =0xFFFFFFFF ;set lock time
   19 00000020 E5801000        STR              R1, [R0]
   20 00000024         
   21 00000024 E59F0144        LDR              R0, = CLKDIVN ;get the address 
                                                            of CLKDIVN
   22 00000028 E3A01007        MOV              R1, #7      ;FCLK:HCLK:PCLK  0=
                                                            1:1:1   1=1:1:2    
                                                            2=1:2:2  3=1:2:4=0 
                                                            01 1 
   23 0000002C E5801000        STR              R1, [R0]    ;                4=
                                                            1:4:4   5=1:4:8    
                                                            6=1:3:3  7=1:3:6=0 
                                                            11 1 
   24 00000030         
   25 00000030         ;U_MDIV=56 , U_PDIV=2 , U_SDIV=2  
   26 00000030 E3A00121        LDR              R0, = UPLLCON ;get the address 
                                                            of UPLLCON 
   27 00000034 E59F1138        LDR              R1, =((56<<12)+(2<<4)+2) ;Fin=1
                                                            2MHz,UPLL = 48MHz  
                                                             111000 0000 0010 0
                                                            010
   28 00000038 E5801000        STR              R1, [R0]    ;Configure UPLL:48M
                                                            Hz
   29 0000003C E1A00000        NOP                          ;Caution: After UPL
                                                            L setting, at least
                                                             7-clocks delay mus
                                                            t be inserted for s
                                                            etting hardware be 



ARM Macro Assembler    Page 2 


                                                            completed.  
   30 00000040 E1A00000        NOP
   31 00000044 E1A00000        NOP
   32 00000048 E1A00000        NOP
   33 0000004C E1A00000        NOP
   34 00000050 E1A00000        NOP
   35 00000054 E1A00000        NOP
   36 00000058         
   37 00000058         ;M_MDIV=68 , M_PDIV=1 , M_SDIV=1
   38 00000058 E59F0118        LDR              R0, =0x4C000004 ;get the addres
                                                            s of MPLLCON
   39 0000005C E59F1118        LDR              R1, =((68<<12)+(1<<4)+1) ;Fin=1
                                                            0MHz , MPLL = 304MH
                                                            z  1000100 0000 000
                                                            1 0001
   40 00000060 E5801000        STR              R1, [R0]
   41 00000064 EB000001        BL               MEMORYINIT  ;jump to memory ini
                                                            tialise
   42 00000068 EB000015        BL               STACKINIT   ;jump to stack  ini
                                                            tialise
   43 0000006C EB000022        BL               UARTINIT    ;jump to uart   ini
                                                            tialise
   44 00000070         
   45 00000070         ;initialise memory
   46 00000070         MEMORYINIT
   47 00000070 E3A00312        LDR              R0, =0x48000000 ;get the addres
                                                            s of BWSCON
   48 00000074 E59F1104        LDR              R1, =0x48000034
   49 00000078 E28F2010        ADR              R2, BUSINIT
   50 0000007C         INITLOOP
   51 0000007C E4923004        LDR              R3, [R2], #4
   52 00000080 E4803004        STR              R3, [R0], #4
   53 00000084 E1300001        TEQ              R0, R1
   54 00000088 1AFFFFFB        BNE              INITLOOP
   55 0000008C E1A0F00E        MOV              PC,LR
   56 00000090         BUSINIT
   57 00000090 22000000        DCD              0x22000000  ;BWSCON    0x480000
                                                            00             
   58 00000094 00000700        DCD              0x00000700  ;BANKCON0          
                                                                 
   59 00000098 00000700        DCD              0x00000700  ;BANKCON1    
   60 0000009C 00000700        DCD              0x00000700  ;BANKCON2    
   61 000000A0 00000700        DCD              0x00000700  ;BANKCON3          
                                                               
   62 000000A4 00000700        DCD              0x00000700  ;BANKCON4    
   63 000000A8 00000700        DCD              0x00000700  ;BANKCON5    
   64 000000AC 00018005        DCD              0x00018005  ;BANKCON6(SDRAM)   
                                                             
   65 000000B0 00018005        DCD              0x00018005  ;BANKCON7(SRAM)    
                                                            
   66 000000B4 008E07A3        DCD              0x008e07a3  ;REFRESH(SDRAM)    
                                                                         
   67 000000B8 000000B1        DCD              0x000000b1  ;BANKSIZE(138MB)   
                                                                         
   68 000000BC 00000030        DCD              0x00000030  ;MRSRB6            
                                                                 
   69 000000C0 00000030        DCD              0x00000030  ;MRSRB7    0x480000
                                                            30
   70 000000C4         



ARM Macro Assembler    Page 3 


   71 000000C4         ;stack initialise
   72 000000C4 33FF8000 
                       _STACKBASEADDR
                               EQU              0x33ff8000
   73 000000C4 33FF4800 
                       StackUse
                               EQU              (_STACKBASEADDR-0x3800)
   74 000000C4 33FF5800 
                       StackSvc
                               EQU              (_STACKBASEADDR-0x2800)
   75 000000C4 33FF5C00 
                       StackUnd
                               EQU              (_STACKBASEADDR-0x2400)
   76 000000C4 33FF6000 
                       StackAbt
                               EQU              (_STACKBASEADDR-0x2000)
   77 000000C4 33FF7000 
                       StackIRQ
                               EQU              (_STACKBASEADDR-0x1000)
   78 000000C4 33FF8000 
                       StackFIQ
                               EQU              (_STACKBASEADDR-0x0000)
   79 000000C4         
   80 000000C4 00000010 
                       USERMODE
                               EQU              0x10
   81 000000C4 00000011 
                       FIQMODE EQU              0x11
   82 000000C4 00000012 
                       IRQMODE EQU              0x12
   83 000000C4 00000013 
                       SVCMODE EQU              0x13
   84 000000C4 00000017 
                       ABORTMODE
                               EQU              0x17
   85 000000C4 0000001B 
                       UNDEFMODE
                               EQU              0x1B
   86 000000C4 0000001F 
                       SYSMODE EQU              0x1F
   87 000000C4         
   88 000000C4 00000040 
                       FIQMSK  EQU              0x40
   89 000000C4 00000080 
                       IRQMSK  EQU              0x80
   90 000000C4         STACKINIT
   91 000000C4 E1A0000E        MOV              R0,LR       ;Save the func retu
                                                            rn Addr
   92 000000C8         ;set svcstack
   93 000000C8 E321F0D3        MSR              CPSR_c,#(SVCMODE|IRQMSK|FIQMSK)
   94 000000CC E59FD0B0        LDR              SP, =StackSvc
   95 000000D0         ;set undefstack      
   96 000000D0 E321F0DB        MSR              CPSR_c,#(UNDEFMODE|IRQMSK|FIQMS
K)
   97 000000D4 E59FD0AC        LDR              SP, =StackUnd
   98 000000D8         ;set abortstack
   99 000000D8 E321F0D7        MSR              CPSR_c,#(ABORTMODE|IRQMSK|FIQMS
K)
  100 000000DC E59FD0A8        LDR              SP, =StackAbt



ARM Macro Assembler    Page 4 


  101 000000E0         ;set irqstack
  102 000000E0 E321F0D2        MSR              CPSR_c,#(IRQMODE|IRQMSK|FIQMSK)
  103 000000E4 E59FD0A4        LDR              SP, =StackIRQ
  104 000000E8         ;set fiqstack
  105 000000E8 E321F0D1        MSR              CPSR_c,#(FIQMODE|IRQMSK|FIQMSK)
  106 000000EC E59FD0A0        LDR              SP, =StackFIQ
  107 000000F0         ;set user and system stack
  108 000000F0 E321F0DF        MSR              CPSR_c,#(SYSMODE|IRQMSK|FIQMSK)
  109 000000F4 E59FD09C        LDR              SP, =StackUse
  110 000000F8 E1A0F000        MOV              PC,R0
  111 000000FC         ;uart initialise
  112 000000FC         UARTINIT
  113 000000FC E59F0098        LDR              R0,=0x56000070 ;GPBCON    
  114 00000100 E5901000        LDR              R1,[R0]     ;set GPIO AS UART 
  115 00000104 E38110A0        ORR              R1,R1,#0xA0
  116 00000108 E5801000        STR              R1,[R0]
  117 0000010C         
  118 0000010C E59F008C        LDR              R0,=0x56000074 ;GPBDAT 
  119 00000110 E3A01000        MOV              R1,#0       ;initialse GPHDAT 
  120 00000114 E5801000        STR              R1,[R0]
  121 00000118         
  122 00000118 E3A00205        LDR              R0,=0x50000000 ;ULCON0       
  123 0000011C E3A01003        MOV              R1,#3       ;IR_MODE,0x0  @[6] 
                                                            Parity_Mode,0x0 @[5
                                                            :3] Num_of_stop_bit
                                                            ,0x0  @[2] Word_len
                                                            gth,0b11 @[1:0]    
                                                             
  124 00000120 E5801000        STR              R1,[R0]
  125 00000124         
  126 00000124 E3A00245        LDR              R0,=0x50000004 ;UCONO    FCLK_D
                                                            iv,0 @[15:12]  Clk_
                                                            select,0b00 @[11:10
                                                            ]
  127 00000128 E3A01005        MOV              R1,#0x5     ;Tx_Int_Type, 1  @[
                                                            9] Rx_Int_Type,0 @[
                                                            8]  Rx_Timeout,0 @[
                                                            7]    Rx_Error_Stat
                                                            _Int,1 @[6]        
                                                                               
                                                                               
                                                                               
                                                                   
  128 0000012C E5801000        STR              R1,[R0]     ;Loopback_Mode,0 @[
                                                            5] Break_Sig,0   @[
                                                            4]  Tx_Mode,0b01 @[
                                                            3:2]  Rx_Mode,0b01 
                                                             @[1:0]       
  129 00000130         
  130 00000130 E59F006C        LDR              R0,=0x50000028 ;UBRDIV0    
  131 00000134 E3A0101A        MOV              R1,#26      ;PCLK=48M   UBRDIV 
                                                            = (int)(48M/115200/
                                                            16) - 1 = 26 = 0x1A
                                                                    
  132 00000138 E5801000        STR              R1,[R0]
  133 0000013C         
  134 0000013C E3A00031        MOV              R0,#0x31    ;1
  135 00000140 E59F1060        LDR              R1,=0x50000020 ;get the address
                                                             of UTXH0(transmit)



ARM Macro Assembler    Page 5 


                                                            
  136 00000144 E5810000        STR              R0,[R1]
  137 00000148         
  138 00000148         LOOP
  139 00000148 E59F005C        LDR              R0,=0x50000010 ;get the address
                                                             of UTRSTAT0 (Tx/Rx
                                                            )status
  140 0000014C E5901000        LDR              R1,[R0]
  141 00000150 E2111001        ANDS             R1,R1,#0x01 ;R1=R1&#0x01  get t
                                                            he  lowest bit of R
                                                            1    
  142 00000154 0AFFFFFB        BEQ              LOOP        ;receive buffer dat
                                                            a is not ready 
  143 00000158 E59F0050        LDR              R0,=0x50000024 ;get the address
                                                             of URXH0(receive)
  144 0000015C E5901000        LDR              R1,[R0]
  145 00000160 E59F0040        LDR              R0,=0x50000020 ;get the address
                                                             of UTXH0(transmit)
                                                            
  146 00000164 E5801000        STR              R1,[R0]
  147 00000168 EAFFFFF6        B                LOOP
  148 0000016C         
  149 0000016C                 END
              4A000008 
              4C000014 
              00038022 
              4C000004 
              00044011 
              48000034 
              33FF5800 
              33FF5C00 
              33FF6000 
              33FF7000 
              33FF8000 
              33FF4800 
              56000070 
              56000074 
              50000028 
              50000020 
              50000010 
              50000024 
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM920T --apcs=interwor
k --depend=.\output\driver.d -o.\output\driver.o -IH:\Install\ARM\RV31\INC -IH:
\Install\ARM\CMSIS\Include -IH:\Install\ARM\Inc\Samsung --predefine="__UVISION_
VERSION SETA 518" --list=.\listings\driver.lst src\driver.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BUSINIT 00000090

Symbol: BUSINIT
   Definitions
      At line 56 in file src\driver.s
   Uses
      At line 49 in file src\driver.s
Comment: BUSINIT used once
Driver 00000000

Symbol: Driver
   Definitions
      At line 1 in file src\driver.s
   Uses
      None
Comment: Driver unused
INITLOOP 0000007C

Symbol: INITLOOP
   Definitions
      At line 50 in file src\driver.s
   Uses
      At line 54 in file src\driver.s
Comment: INITLOOP used once
LOOP 00000148

Symbol: LOOP
   Definitions
      At line 138 in file src\driver.s
   Uses
      At line 142 in file src\driver.s
      At line 147 in file src\driver.s

MEMORYINIT 00000070

Symbol: MEMORYINIT
   Definitions
      At line 46 in file src\driver.s
   Uses
      At line 41 in file src\driver.s
Comment: MEMORYINIT used once
STACKINIT 000000C4

Symbol: STACKINIT
   Definitions
      At line 90 in file src\driver.s
   Uses
      At line 42 in file src\driver.s
Comment: STACKINIT used once
UARTINIT 000000FC

Symbol: UARTINIT
   Definitions
      At line 112 in file src\driver.s
   Uses
      At line 43 in file src\driver.s
Comment: UARTINIT used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABORTMODE 00000017

Symbol: ABORTMODE
   Definitions
      At line 84 in file src\driver.s
   Uses
      At line 99 in file src\driver.s
Comment: ABORTMODE used once
CLKDIVN 4C000014

Symbol: CLKDIVN
   Definitions
      At line 6 in file src\driver.s
   Uses
      At line 21 in file src\driver.s
Comment: CLKDIVN used once
FIQMODE 00000011

Symbol: FIQMODE
   Definitions
      At line 81 in file src\driver.s
   Uses
      At line 105 in file src\driver.s
Comment: FIQMODE used once
FIQMSK 00000040

Symbol: FIQMSK
   Definitions
      At line 88 in file src\driver.s
   Uses
      At line 93 in file src\driver.s
      At line 96 in file src\driver.s
      At line 99 in file src\driver.s
      At line 102 in file src\driver.s
      At line 105 in file src\driver.s
      At line 108 in file src\driver.s

INTMSK 4A000008

Symbol: INTMSK
   Definitions
      At line 3 in file src\driver.s
   Uses
      At line 9 in file src\driver.s
Comment: INTMSK used once
IRQMODE 00000012

Symbol: IRQMODE
   Definitions
      At line 82 in file src\driver.s
   Uses
      At line 102 in file src\driver.s
Comment: IRQMODE used once
IRQMSK 00000080

Symbol: IRQMSK
   Definitions
      At line 89 in file src\driver.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 93 in file src\driver.s
      At line 96 in file src\driver.s
      At line 99 in file src\driver.s
      At line 102 in file src\driver.s
      At line 105 in file src\driver.s
      At line 108 in file src\driver.s

LOCKTIME 4C000000

Symbol: LOCKTIME
   Definitions
      At line 5 in file src\driver.s
   Uses
      At line 17 in file src\driver.s
Comment: LOCKTIME used once
SVCMODE 00000013

Symbol: SVCMODE
   Definitions
      At line 83 in file src\driver.s
   Uses
      At line 93 in file src\driver.s
Comment: SVCMODE used once
SYSMODE 0000001F

Symbol: SYSMODE
   Definitions
      At line 86 in file src\driver.s
   Uses
      At line 108 in file src\driver.s
Comment: SYSMODE used once
StackAbt 33FF6000

Symbol: StackAbt
   Definitions
      At line 76 in file src\driver.s
   Uses
      At line 100 in file src\driver.s
Comment: StackAbt used once
StackFIQ 33FF8000

Symbol: StackFIQ
   Definitions
      At line 78 in file src\driver.s
   Uses
      At line 106 in file src\driver.s
Comment: StackFIQ used once
StackIRQ 33FF7000

Symbol: StackIRQ
   Definitions
      At line 77 in file src\driver.s
   Uses
      At line 103 in file src\driver.s
Comment: StackIRQ used once
StackSvc 33FF5800

Symbol: StackSvc
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 74 in file src\driver.s
   Uses
      At line 94 in file src\driver.s
Comment: StackSvc used once
StackUnd 33FF5C00

Symbol: StackUnd
   Definitions
      At line 75 in file src\driver.s
   Uses
      At line 97 in file src\driver.s
Comment: StackUnd used once
StackUse 33FF4800

Symbol: StackUse
   Definitions
      At line 73 in file src\driver.s
   Uses
      At line 109 in file src\driver.s
Comment: StackUse used once
UNDEFMODE 0000001B

Symbol: UNDEFMODE
   Definitions
      At line 85 in file src\driver.s
   Uses
      At line 96 in file src\driver.s
Comment: UNDEFMODE used once
UPLLCON 40000008

Symbol: UPLLCON
   Definitions
      At line 7 in file src\driver.s
   Uses
      At line 26 in file src\driver.s
Comment: UPLLCON used once
USERMODE 00000010

Symbol: USERMODE
   Definitions
      At line 80 in file src\driver.s
   Uses
      None
Comment: USERMODE unused
WTCON 53000000

Symbol: WTCON
   Definitions
      At line 4 in file src\driver.s
   Uses
      At line 13 in file src\driver.s
Comment: WTCON used once
_STACKBASEADDR 33FF8000

Symbol: _STACKBASEADDR
   Definitions
      At line 72 in file src\driver.s
   Uses
      At line 73 in file src\driver.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 74 in file src\driver.s
      At line 75 in file src\driver.s
      At line 76 in file src\driver.s
      At line 77 in file src\driver.s
      At line 78 in file src\driver.s

21 symbols
361 symbols in table
